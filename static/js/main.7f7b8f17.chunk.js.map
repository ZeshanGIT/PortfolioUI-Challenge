{"version":3,"sources":["images/diamonds.png","images/poppin-shades.png","images/sexy-orange.png","ImageItem.js","MouseEventHook.js","Content.js","Menu.js","App.js","reportWebVitals.js","index.js"],"names":["ImageItem","imgProps","backgroundColor","cursorColor","setCursorColor","setBackgroundColor","className","onMouseEnter","div","style","border","whileHover","whileTap","mixBlendMode","scale","transition","type","bounce","glareEnable","tiltReverse","tiltMaxAngleX","tiltMaxAngleY","alt","useMouseCoords","useState","x","y","coords","setCoords","useEffect","console","log","document","addEventListener","e","pageX","pageY","Content","props","controls","useAnimation","ref","useRef","p","id","animate","src","diamonds","poppinshades","sexyorange","Menu","App","start","duration","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f7b8f17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/diamonds.f4331b34.png\";","export default __webpack_public_path__ + \"static/media/poppin-shades.15b95240.png\";","export default __webpack_public_path__ + \"static/media/sexy-orange.6e1d4274.png\";","import { motion } from \"framer-motion\";\r\nimport Tilt from \"react-parallax-tilt\";\r\n\r\nconst ImageItem = ({\r\n  imgProps,\r\n  backgroundColor,\r\n  cursorColor,\r\n  setCursorColor,\r\n  setBackgroundColor,\r\n}) => {\r\n  //   let id;\r\n\r\n  //   const [scale, setScale] = useState(1);\r\n  //   const controls = useAnimation();\r\n\r\n  //   useEffect(() => {\r\n  //     const { x, y } = props.coords;\r\n  //     const elem = ref?.current;\r\n  //     const {\r\n  //       x: offsetLeft,\r\n  //       y: offsetTop,\r\n  //       width,\r\n  //       height,\r\n  //     } = elem.getBoundingClientRect();\r\n\r\n  //     const calcScale =\r\n  //       1.5 -\r\n  //       Math.floor(\r\n  //         Math.sqrt(\r\n  //           Math.pow(x - (offsetLeft + width / 2), 2) +\r\n  //             Math.pow(y - (offsetTop + height / 2), 2)\r\n  //         )\r\n  //       ) /\r\n  //         800;\r\n\r\n  //     const border = `${transform(\r\n  //       calcScale,\r\n  //       [0.5, 1.0],\r\n  //       [0.0, 20.0]\r\n  //     )}px solid rgb(${props.name})`;\r\n  //     console.log(border);\r\n  //     controls.start({\r\n  //       border: border,\r\n\r\n  //       transition: {\r\n  //         duration: 0,\r\n  //         ease: \"easeInOut\",\r\n  //       },\r\n  //     });\r\n  //   }, [props.coords, ref, controls, props.name]);\r\n  return (\r\n    <div\r\n      className={imgProps.className}\r\n      onMouseEnter={() => {\r\n        setBackgroundColor(cursorColor);\r\n        setCursorColor(backgroundColor);\r\n      }}\r\n    >\r\n      <motion.div\r\n        style={{\r\n          border: `0px solid rgb(${cursorColor})`,\r\n        }}\r\n        whileHover={{\r\n          border: `10px solid rgb(${cursorColor})`,\r\n        }}\r\n        whileTap={{\r\n          mixBlendMode: \"luminosity\",\r\n          scale: 0.95,\r\n        }}\r\n        transition={{\r\n          type: \"spring\",\r\n          bounce: 0.5,\r\n        }}\r\n      >\r\n        <Tilt\r\n          glareEnable={true}\r\n          tiltReverse={true}\r\n          tiltMaxAngleX=\"15\"\r\n          tiltMaxAngleY=\"15\"\r\n        >\r\n          <img {...imgProps} alt=\"\" />\r\n        </Tilt>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageItem;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useMouseCoords = () => {\r\n    const [coords, setCoords] = useState({x:0, y:0});\r\n    useEffect(() => {\r\n        console.log('Adding listener...');\r\n        document.addEventListener(\"mousemove\", (e)=>{\r\n            setCoords({\r\n                x: e.pageX,\r\n                y: e.pageY,\r\n            });\r\n        });\r\n    }, [])\r\n\r\n    return coords;\r\n}\r\n\r\nexport default useMouseCoords;","import diamonds from \"./images/diamonds.png\";\r\nimport poppinshades from \"./images/poppin-shades.png\";\r\nimport sexyorange from \"./images/sexy-orange.png\";\r\nimport ImageItem from \"./ImageItem\";\r\nimport useMouseCoords from \"./MouseEventHook\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst Content = (props) => {\r\n  // const side2 = useProximityFeedback();\r\n  // const main = useProximityFeedback();\r\n\r\n  // const proxFeedback = ({ref, distance})=>{\r\n  //     console.log(ref, distance);\r\n  // };\r\n  // [side1, side2, main].forEach(proxFeedback);\r\n  const coords = useMouseCoords();\r\n  const controls = useAnimation();\r\n  let ref = useRef();\r\n\r\n  //   useEffect(() => {\r\n  //     const { x, y } = coords;\r\n  //     const elem = ref?.current;\r\n  //     const {\r\n  //       x: offsetLeft,\r\n  //       y: offsetTop,\r\n  //       width,\r\n  //       height,\r\n  //     } = elem.getBoundingClientRect();\r\n\r\n  //     const distance = Math.floor(\r\n  //       Math.sqrt(\r\n  //         Math.pow(x - (offsetLeft + width / 2), 2) +\r\n  //           Math.pow(y - (offsetTop + height / 2), 2)\r\n  //       )\r\n  //     );\r\n\r\n  //     const factor = distance / 600;\r\n\r\n  //     // controls.start({\r\n  //     //   top: factor + offsetTop,\r\n  //     //   left: factor + offsetLeft,\r\n  //     //   transition: {\r\n  //     //     duration: 0.1,\r\n  //     //     type: \"spring\",\r\n  //     //     bounce: 0.5,\r\n  //     //   },\r\n  //     // });\r\n  //   }, [coords, controls]);\r\n\r\n  return (\r\n    <div className=\"Content\" onMouseEnter={() => {}}>\r\n      <motion.p id=\"main-title\" ref={ref} animate={controls}>\r\n        OLADIMEJI ODUNSI\r\n      </motion.p>\r\n      <ImageItem\r\n        {...props}\r\n        coords={coords}\r\n        // onMouseEnter={onMouseEnter}\r\n        cursorColor=\"137, 57, 68\"\r\n        backgroundColor=\"210, 147, 155\"\r\n        imgProps={{\r\n          src: diamonds,\r\n          alt: \"\",\r\n          className: \"side-img left\",\r\n        }}\r\n      />\r\n      <ImageItem\r\n        {...props}\r\n        coords={coords}\r\n        // onMouseEnter={onMouseEnter}\r\n        cursorColor=\"3, 145, 145\"\r\n        backgroundColor=\"5, 230, 230\"\r\n        imgProps={{\r\n          src: poppinshades,\r\n          alt: \"\",\r\n          className: \"main-img\",\r\n        }}\r\n      />\r\n      <ImageItem\r\n        {...props}\r\n        coords={coords}\r\n        // onMouseEnter={onMouseEnter}\r\n        cursorColor=\"1, 75, 164\"\r\n        backgroundColor=\"16, 123, 254\"\r\n        imgProps={{\r\n          src: sexyorange,\r\n          className: \"side-img right\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react'\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className='menu'>\r\n            <p className='title'>ODUNSI</p>\r\n            <nav>\r\n                <p>ABOUT</p>\r\n                <p>WORK</p>\r\n                <p>CONTACT</p>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import { useEffect, useState } from \"react\";\nimport Content from \"./Content\";\nimport Menu from \"./Menu\";\nimport \"./sass/App.scss\";\nimport AnimatedCursor from \"react-animated-cursor\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nfunction App() {\n  const [cursorColor, setCursorColor] = useState(\"0, 0, 0\");\n  const [backgroundColor, setBackgroundColor] = useState(\"256, 256, 256\");\n\n  const controls = useAnimation();\n\n  useEffect(() => {\n    controls.start({\n      backgroundColor: `rgb(${backgroundColor})`,\n      // backgroundImage: `linear-gradient(to bottom, rgb(${backgroundColor}), rgb(${backgroundColor}, 0.7))`,\n      transition: {\n        duration: 0.4,\n      },\n    });\n  }, [controls, backgroundColor]);\n\n  return (\n    <div className=\"App\">\n      <motion.div animate={controls}>\n        <AnimatedCursor color={cursorColor} />\n        <div className=\"Wrapper\">\n          <Menu />\n          <Content\n            setCursorColor={setCursorColor}\n            setBackgroundColor={setBackgroundColor}\n          />\n          <p className=\"scroll-down\">Scroll Down</p>\n          <p className=\"tagline\">Visual artist and photographer</p>\n        </div>\n      </motion.div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}